{"ast":null,"code":"var _jsxFileName = \"/home/dickson/\\uBB38\\uC11C/agentApp/frontend/src/components/SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"../SearchPage.css\";\nimport { searchTextApi, videoStreamApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [textResults, setTextResults] = useState([]);\n  const videoRefs = useRef([]);\n  const handleSearch = async () => {\n    console.log(\"검색어:\", query);\n    try {\n      const res = await fetch(searchTextApi(query));\n      if (!res.ok) throw new Error(\"검색 API 오류\");\n      const data = await res.json();\n      if (data.results && data.results.length > 0) {\n        const enriched = data.results.map(item => ({\n          ...item,\n          videoUrl: videoStreamApi(item.session_id, item.camera_id)\n        }));\n        setTextResults(enriched);\n      } else {\n        setTextResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ✅ 검색 결과가 바뀔 때마다 자동재생 시도\n  useEffect(() => {\n    videoRefs.current.forEach(video => {\n      if (video) {\n        video.play().catch(err => {\n          console.warn(\"자동재생 실패:\", err);\n        });\n      }\n    });\n  }, [textResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD14D\\uC2A4\\uD2B8 \\u2192 \\uD14D\\uC2A4\\uD2B8 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), textResults.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), item.video_url && /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: el => {\n              videoRefs.current[idx] = el;\n            },\n            width: \"320\",\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            playsInline: true,\n            controls: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: item.videoUrl,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this), \"\\uC9C0\\uC6D0\\uD558\\uC9C0 \\uC54A\\uB294 \\uBE0C\\uB77C\\uC6B0\\uC800\\uC785\\uB2C8\\uB2E4.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD14D\\uC2A4\\uD2B8 \\u2192 \\uC774\\uBBF8\\uC9C0 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-card\",\n          children: \"\\uC774\\uBBF8\\uC9C0 \\uACB0\\uACFC (\\uCD94\\uD6C4 \\uC5F0\\uACB0)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"/NxPs5qCvUxeUUCvCVM4JrmtFfM=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","searchTextApi","videoStreamApi","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","textResults","setTextResults","videoRefs","handleSearch","console","log","res","fetch","ok","Error","data","json","results","length","enriched","map","item","videoUrl","session_id","camera_id","err","error","current","forEach","video","play","catch","warn","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","idx","text","video_url","ref","el","width","autoPlay","muted","loop","playsInline","controls","src","_c","$RefreshReg$"],"sources":["/home/dickson/문서/agentApp/frontend/src/components/SearchPage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport \"../SearchPage.css\";\nimport { searchTextApi, videoStreamApi } from \"../api\";\n\nconst SearchPage: React.FC = () => {\n  const [query, setQuery] = useState(\"\");\n  const [textResults, setTextResults] = useState<any[]>([]);\n  const videoRefs = useRef<(HTMLVideoElement | null)[]>([]);\n\n  const handleSearch = async () => {\n    console.log(\"검색어:\", query);\n\n    try {\n      const res = await fetch(searchTextApi(query));\n      if (!res.ok) throw new Error(\"검색 API 오류\");\n      const data = await res.json();\n\n      if (data.results && data.results.length > 0) {\n        const enriched = data.results.map((item: any) => ({\n          ...item,\n          videoUrl: videoStreamApi(item.session_id, item.camera_id),\n        }));\n        setTextResults(enriched);\n      } else {\n        setTextResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // ✅ 검색 결과가 바뀔 때마다 자동재생 시도\n  useEffect(() => {\n    videoRefs.current.forEach((video) => {\n      if (video) {\n        video.play().catch((err) => {\n          console.warn(\"자동재생 실패:\", err);\n        });\n      }\n    });\n  }, [textResults]);\n\n  return (\n    <div className=\"search-container\">\n      {/* 검색 박스 */}\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button onClick={handleSearch}>검색</button>\n      </div>\n\n      {/* 검색 결과 */}\n      <div className=\"results-grid\">\n        <div className=\"results-column\">\n          <h2>텍스트 → 텍스트 결과</h2>\n          {textResults.map((item, idx) => (\n            <div key={idx} className=\"result-card\">\n              <p>{item.text}</p>\n\n              {item.video_url && (\n                <video\n                  ref={(el) => {\n                    videoRefs.current[idx] = el;\n                  }}\n                  width=\"320\"\n                  autoPlay\n                  muted\n                  loop\n                  playsInline\n                  controls\n                >\n                  <source src={item.videoUrl} type=\"video/mp4\" />\n                  지원하지 않는 브라우저입니다.\n                </video>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"results-column\">\n          <h2>텍스트 → 이미지 결과</h2>\n          <div className=\"result-card\">이미지 결과 (추후 연결)</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}