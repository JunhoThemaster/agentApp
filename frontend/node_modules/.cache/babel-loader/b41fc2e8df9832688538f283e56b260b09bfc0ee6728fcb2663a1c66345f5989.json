{"ast":null,"code":"var _jsxFileName = \"/home/user2/\\uBB38\\uC11C/agentApp/frontend/src/components/SearchPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../SearchPage.css\";\nimport { useSearchVideos } from \"../hooks/useSearchVideos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const {\n    query,\n    setQuery,\n    textResults,\n    imageResults,\n    videoRefs,\n    handleSearch\n  } = useSearchVideos();\n\n  // 카드별 통계 데이터/로딩/오류 상태 관리 (session_id 기준)\n  const [statsMap, setStatsMap] = useState({});\n  const [openMap, setOpenMap] = useState({});\n  const [loadingMap, setLoadingMap] = useState({});\n  const [errorMap, setErrorMap] = useState({});\n  const fetchStats = async sessionId => {\n    // 이미 불러온 게 있으면 열기/닫기만 토글\n    if (statsMap[sessionId]) {\n      setOpenMap(m => ({\n        ...m,\n        [sessionId]: !m[sessionId]\n      }));\n      return;\n    }\n    try {\n      setLoadingMap(m => ({\n        ...m,\n        [sessionId]: true\n      }));\n      setErrorMap(m => ({\n        ...m,\n        [sessionId]: null\n      }));\n      const res = await fetch(`http://localhost:8000/api/stats/${encodeURIComponent(sessionId)}`);\n      if (!res.ok) {\n        const msg = await res.text();\n        throw new Error(msg || `HTTP ${res.status}`);\n      }\n      const data = await res.json();\n      setStatsMap(m => ({\n        ...m,\n        [sessionId]: data\n      }));\n      setOpenMap(m => ({\n        ...m,\n        [sessionId]: true\n      }));\n    } catch (e) {\n      setErrorMap(m => {\n        var _e$message;\n        return {\n          ...m,\n          [sessionId]: (_e$message = e === null || e === void 0 ? void 0 : e.message) !== null && _e$message !== void 0 ? _e$message : \"에러\"\n        };\n      });\n    } finally {\n      setLoadingMap(m => ({\n        ...m,\n        [sessionId]: false\n      }));\n    }\n  };\n\n  // ===== 포맷팅 유틸 (추가) =====\n  function fmtNum(x, digits = 3) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    return new Intl.NumberFormat(\"ko-KR\", {\n      maximumFractionDigits: digits\n    }).format(x);\n  }\n  function fmtPercent(x) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    return `${new Intl.NumberFormat(\"ko-KR\", {\n      maximumFractionDigits: 1\n    }).format(x * 100)}%`;\n  }\n  // latency: 값이 5 미만이면 초로 보고 ms로 변환(예: 0.25 -> 250 ms), 아니면 그대로 ms\n  function fmtLatency(x) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    const v = x < 5 ? x * 1000 : x; // 5 미만이면 초로 간주\n    return `${new Intl.NumberFormat(\"ko-KR\", {\n      maximumFractionDigits: 3\n    }).format(v)} ms`;\n  }\n  function fmtMeanStd(mean, std, unit = \"raw\") {\n    if (unit === \"latency\") {\n      return `${fmtLatency(mean)} / ${fmtLatency(std)}`;\n    }\n    return `${fmtNum(mean)} / ${fmtNum(std)}`;\n  }\n  const StatsBlock = ({\n    s\n  }) => {\n    var _s$stats, _st$latency$action_pr, _st$latency, _st$latency$observati, _st$latency2, _st$tracking_error, _st$joint_velocity_di, _st$command;\n    if (!s) return null;\n    if (!s.found) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-box error\",\n      children: \"\\uD574\\uB2F9 \\uC138\\uC158 \\uD1B5\\uACC4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this);\n    const st = (_s$stats = s.stats) !== null && _s$stats !== void 0 ? _s$stats : {};\n    const a = (_st$latency$action_pr = (_st$latency = st.latency) === null || _st$latency === void 0 ? void 0 : _st$latency.action_prev) !== null && _st$latency$action_pr !== void 0 ? _st$latency$action_pr : {};\n    const o = (_st$latency$observati = (_st$latency2 = st.latency) === null || _st$latency2 === void 0 ? void 0 : _st$latency2.observation_prev) !== null && _st$latency$observati !== void 0 ? _st$latency$observati : {};\n    const te = (_st$tracking_error = st.tracking_error) !== null && _st$tracking_error !== void 0 ? _st$tracking_error : {};\n    const jv = (_st$joint_velocity_di = st.joint_velocity_diff) !== null && _st$joint_velocity_di !== void 0 ? _st$joint_velocity_di : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-key\",\n          children: \"\\uC131\\uACF5\\uB960\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-val\",\n          children: fmtPercent((_st$command = st.command) === null || _st$command === void 0 ? void 0 : _st$command.success_rate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-key\",\n          children: \"\\uC9C0\\uC5F0\\uC2DC\\uAC04(action_prev) (\\uD3C9\\uADE0/\\uD45C\\uC900\\uD3B8\\uCC28)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-val\",\n          children: fmtMeanStd(a.mean, a.std, \"latency\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-key\",\n          children: \"\\uC9C0\\uC5F0\\uC2DC\\uAC04(observation_prev) (\\uD3C9\\uADE0/\\uD45C\\uC900\\uD3B8\\uCC28)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-val\",\n          children: fmtMeanStd(o.mean, o.std, \"latency\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-key\",\n          children: \"\\uD2B8\\uB798\\uD0B9 \\uC5D0\\uB7EC (\\uD3C9\\uADE0/\\uD45C\\uC900\\uD3B8\\uCC28)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-val\",\n          children: fmtMeanStd(te.mean, te.std)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-key\",\n          children: \"\\uC870\\uC778\\uD2B8 \\uC18D\\uB3C4\\uCC28 (\\uD3C9\\uADE0/\\uD45C\\uC900\\uD3B8\\uCC28)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"stats-val\",\n          children: fmtMeanStd(jv.mean, jv.std)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCard = (result, idx) => {\n    var _statsMap$sid;\n    const sid = String(result.session_id);\n    const isOpen = !!openMap[sid];\n    const isLoading = !!loadingMap[sid];\n    const err = errorMap[sid];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [result.session_id, \" - \", result.camera_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: el => {\n          if (videoRefs.current) videoRefs.current[idx] = el;\n        },\n        src: result.video_url,\n        controls: true,\n        autoPlay: true,\n        muted: true,\n        width: \"320\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchStats(sid),\n          disabled: isLoading,\n          children: isLoading ? \"불러오는 중...\" : isOpen ? \"통계 닫기\" : \"통계 보기\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-box error\",\n        children: [\"\\uC5D0\\uB7EC: \", err]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(StatsBlock, {\n        s: (_statsMap$sid = statsMap[sid]) !== null && _statsMap$sid !== void 0 ? _statsMap$sid : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 20\n      }, this)]\n    }, sid, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD14D\\uC2A4\\uD2B8 \\u2192 \\uD14D\\uC2A4\\uD2B8 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), textResults.slice(0, 5).map((r, idx) => renderCard(r, idx))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD14D\\uC2A4\\uD2B8 \\u2192 \\uC774\\uBBF8\\uC9C0 \\uACB0\\uACFC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), imageResults.slice(0, 5).map((r, idx) => renderCard(r, idx))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"3eQXbKHIcTMuI44xsfs9Qrd3KN0=\", false, function () {\n  return [useSearchVideos];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useSearchVideos","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","textResults","imageResults","videoRefs","handleSearch","statsMap","setStatsMap","openMap","setOpenMap","loadingMap","setLoadingMap","errorMap","setErrorMap","fetchStats","sessionId","m","res","fetch","encodeURIComponent","ok","msg","text","Error","status","data","json","e","_e$message","message","fmtNum","x","digits","undefined","Number","isNaN","Intl","NumberFormat","maximumFractionDigits","format","fmtPercent","fmtLatency","v","fmtMeanStd","mean","std","unit","StatsBlock","s","_s$stats","_st$latency$action_pr","_st$latency","_st$latency$observati","_st$latency2","_st$tracking_error","_st$joint_velocity_di","_st$command","found","className","children","fileName","_jsxFileName","lineNumber","columnNumber","st","stats","a","latency","action_prev","o","observation_prev","te","tracking_error","jv","joint_velocity_diff","command","success_rate","renderCard","result","idx","_statsMap$sid","sid","String","session_id","isOpen","isLoading","err","camera_id","ref","el","current","src","video_url","controls","autoPlay","muted","width","onClick","disabled","type","placeholder","value","onChange","target","slice","map","r","_c","$RefreshReg$"],"sources":["/home/user2/문서/agentApp/frontend/src/components/SearchPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../SearchPage.css\";\nimport { useSearchVideos } from \"../hooks/useSearchVideos\";\n\ntype StatsResponse = {\n  session_id: string;\n  found: boolean;\n  stats: {\n    latency?: {\n      action_prev?: { mean?: number; std?: number };\n      observation_prev?: { mean?: number; std?: number };\n    };\n    command?: { success_rate?: number };\n    tracking_error?: { mean?: number; std?: number };\n    joint_velocity_diff?: { mean?: number; std?: number };\n  } | null;\n};\n\nconst SearchPage: React.FC = () => {\n  const {\n    query,\n    setQuery,\n    textResults,\n    imageResults,\n    videoRefs,\n    handleSearch,\n  } = useSearchVideos();\n\n  // 카드별 통계 데이터/로딩/오류 상태 관리 (session_id 기준)\n  const [statsMap, setStatsMap] = useState<Record<string, StatsResponse | null>>({});\n  const [openMap, setOpenMap] = useState<Record<string, boolean>>({});\n  const [loadingMap, setLoadingMap] = useState<Record<string, boolean>>({});\n  const [errorMap, setErrorMap] = useState<Record<string, string | null>>({});\n\n  const fetchStats = async (sessionId: string) => {\n    // 이미 불러온 게 있으면 열기/닫기만 토글\n    if (statsMap[sessionId]) {\n      setOpenMap((m) => ({ ...m, [sessionId]: !m[sessionId] }));\n      return;\n    }\n    try {\n      setLoadingMap((m) => ({ ...m, [sessionId]: true }));\n      setErrorMap((m) => ({ ...m, [sessionId]: null }));\n      const res = await fetch(`http://localhost:8000/api/stats/${encodeURIComponent(sessionId)}`);\n      if (!res.ok) {\n        const msg = await res.text();\n        throw new Error(msg || `HTTP ${res.status}`);\n      }\n      const data: StatsResponse = await res.json();\n      setStatsMap((m) => ({ ...m, [sessionId]: data }));\n      setOpenMap((m) => ({ ...m, [sessionId]: true }));\n    } catch (e: any) {\n      setErrorMap((m) => ({ ...m, [sessionId]: e?.message ?? \"에러\" }));\n    } finally {\n      setLoadingMap((m) => ({ ...m, [sessionId]: false }));\n    }\n  };\n\n  // ===== 포맷팅 유틸 (추가) =====\n  function fmtNum(x?: number | null, digits = 3) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    return new Intl.NumberFormat(\"ko-KR\", { maximumFractionDigits: digits }).format(x);\n  }\n  function fmtPercent(x?: number | null) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    return `${new Intl.NumberFormat(\"ko-KR\", { maximumFractionDigits: 1 }).format(x * 100)}%`;\n  }\n  // latency: 값이 5 미만이면 초로 보고 ms로 변환(예: 0.25 -> 250 ms), 아니면 그대로 ms\n  function fmtLatency(x?: number | null) {\n    if (x === null || x === undefined || Number.isNaN(x)) return \"-\";\n    const v = x < 5 ? x * 1000 : x; // 5 미만이면 초로 간주\n    return `${new Intl.NumberFormat(\"ko-KR\", { maximumFractionDigits: 3 }).format(v)} ms`;\n  }\n  function fmtMeanStd(mean?: number | null, std?: number | null, unit: \"latency\" | \"raw\" = \"raw\") {\n    if (unit === \"latency\") {\n      return `${fmtLatency(mean)} / ${fmtLatency(std)}`;\n    }\n    return `${fmtNum(mean)} / ${fmtNum(std)}`;\n  }\n\n  const StatsBlock: React.FC<{ s: StatsResponse | null }> = ({ s }) => {\n    if (!s) return null;\n    if (!s.found) return <div className=\"stats-box error\">해당 세션 통계가 없습니다.</div>;\n    const st = s.stats ?? {};\n    const a = st.latency?.action_prev ?? {};\n    const o = st.latency?.observation_prev ?? {};\n    const te = st.tracking_error ?? {};\n    const jv = st.joint_velocity_diff ?? {};\n    return (\n      <div className=\"stats-box\">\n        <div className=\"stats-row\">\n          <span className=\"stats-key\">성공률</span>\n          <span className=\"stats-val\">{fmtPercent(st.command?.success_rate)}</span>\n        </div>\n        <div className=\"stats-row\">\n          <span className=\"stats-key\">지연시간(action_prev) (평균/표준편차)</span>\n          <span className=\"stats-val\">{fmtMeanStd(a.mean, a.std, \"latency\")}</span>\n        </div>\n        <div className=\"stats-row\">\n          <span className=\"stats-key\">지연시간(observation_prev) (평균/표준편차)</span>\n          <span className=\"stats-val\">{fmtMeanStd(o.mean, o.std, \"latency\")}</span>\n        </div>\n        <div className=\"stats-row\">\n          <span className=\"stats-key\">트래킹 에러 (평균/표준편차)</span>\n          <span className=\"stats-val\">{fmtMeanStd(te.mean, te.std)}</span>\n        </div>\n        <div className=\"stats-row\">\n          <span className=\"stats-key\">조인트 속도차 (평균/표준편차)</span>\n          <span className=\"stats-val\">{fmtMeanStd(jv.mean, jv.std)}</span>\n        </div>\n      </div>\n    );\n  };\n\n  const renderCard = (result: any, idx: number) => {\n    const sid = String(result.session_id);\n    const isOpen = !!openMap[sid];\n    const isLoading = !!loadingMap[sid];\n    const err = errorMap[sid];\n\n    return (\n      <div key={sid} className=\"result-card\">\n        <p>\n          {result.session_id} - {result.camera_id}\n        </p>\n        <video\n          ref={(el) => {\n            if (videoRefs.current) videoRefs.current[idx] = el;\n          }}\n          src={result.video_url}\n          controls\n          autoPlay\n          muted\n          width=\"320\"\n        />\n        <div className=\"card-actions\">\n          <button onClick={() => fetchStats(sid)} disabled={isLoading}>\n            {isLoading ? \"불러오는 중...\" : isOpen ? \"통계 닫기\" : \"통계 보기\"}\n          </button>\n        </div>\n        {err && <div className=\"stats-box error\">에러: {err}</div>}\n        {isOpen && <StatsBlock s={statsMap[sid] ?? null} />}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"search-container\">\n      {/* 검색 박스 */}\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          placeholder=\"검색어를 입력하세요...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <button onClick={handleSearch}>검색</button>\n      </div>\n\n      {/* 검색 결과 */}\n      <div className=\"results-grid\">\n        {/* 텍스트 → 텍스트 결과 */}\n        <div className=\"results-column\">\n          <h2>텍스트 → 텍스트 결과</h2>\n          {textResults.slice(0, 5).map((r: any, idx: number) => renderCard(r, idx))}\n        </div>\n\n        {/* 텍스트 → 이미지 결과 */}\n        <div className=\"results-column\">\n          <h2>텍스트 → 이미지 결과</h2>\n          {imageResults.slice(0, 5).map((r: any, idx: number) => renderCard(r, idx))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}